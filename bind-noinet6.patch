diff -ur bind-9.3.0rc3.orig/configure.in bind-9.3.0rc3/configure.in
--- bind-9.3.0rc3.orig/configure.in	2004-07-23 06:40:00.000000000 +0200
+++ bind-9.3.0rc3/configure.in	2004-09-02 21:50:22.318104392 +0200
@@ -1111,45 +1111,6 @@
 	 found_ipv6=no])
 
 #
-# See whether IPv6 support is provided via a Kame add-on.
-# This is done before other IPv6 linking tests to LIBS is properly set.
-#
-AC_MSG_CHECKING(for Kame IPv6 support)
-AC_ARG_WITH(kame,
-	[  --with-kame[=PATH]	use Kame IPv6 [default path /usr/local/v6]],
-	use_kame="$withval", use_kame="no")
-
-case "$use_kame" in
-	no)
-		;;
-	yes)
-		kame_path=/usr/local/v6
-		;;
-	*)
-		kame_path="$use_kame"
-		;;
-esac
-
-case "$use_kame" in
-	no)
-		AC_MSG_RESULT(no)
-		;;
-	*)
-		if test -f $kame_path/lib/libinet6.a; then
-			AC_MSG_RESULT($kame_path/lib/libinet6.a)
-			LIBS="-L$kame_path/lib -linet6 $LIBS"
-		else
-			AC_MSG_ERROR([$kame_path/lib/libinet6.a not found.
-
-Please choose the proper path with the following command:
-
-    configure --with-kame=PATH
-])
-		fi
-		;;
-esac
-
-#
 # Whether netinet6/in6.h is needed has to be defined in isc/platform.h.
 # Including it on Kame-using platforms is very bad, though, because
 # Kame uses #error against direct inclusion.   So include it on only
@@ -1577,32 +1538,7 @@
 
 case $want_getifaddrs in
 yes|glibc)
-#
-# Do we have getifaddrs() ?
-#
-case $host in
-*-linux*)
-	# Some recent versions of glibc support getifaddrs() which does not
-	# provide AF_INET6 addresses while the function provided by the USAGI
-	# project handles the AF_INET6 case correctly.  We need to avoid
-	# using the former but prefer the latter unless overridden by
-	# --enable-getifaddrs=glibc.
-	if test $use_getifaddrs = glibc
-	then
-		AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
-	else
-		save_LIBS="$LIBS"
-		LIBS="-L/usr/local/v6/lib $LIBS"
-		AC_CHECK_LIB(inet6, getifaddrs,
-			LIBS="$LIBS -linet6"
-			AC_DEFINE(HAVE_GETIFADDRS),
-			LIBS=${save_LIBS})
-	fi
-	;;
-*)
-	AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
-	;;
-esac
+AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
 ;;
 no)
 ;;
diff -ur bind-9.3.0rc3.orig/lib/bind/configure.in bind-9.3.0rc3/lib/bind/configure.in
--- bind-9.3.0rc3.orig/lib/bind/configure.in	2004-08-10 04:19:54.000000000 +0200
+++ bind-9.3.0rc3/lib/bind/configure.in	2004-09-02 21:48:06.216794936 +0200
@@ -790,45 +790,6 @@
 	 found_ipv6=no])
 
 #
-# See whether IPv6 support is provided via a Kame add-on.
-# This is done before other IPv6 linking tests to LIBS is properly set.
-#
-AC_MSG_CHECKING(for Kame IPv6 support)
-AC_ARG_WITH(kame,
-	[  --with-kame[=PATH]	use Kame IPv6 [default path /usr/local/v6]],
-	use_kame="$withval", use_kame="no")
-
-case "$use_kame" in
-	no)
-		;;
-	yes)
-		kame_path=/usr/local/v6
-		;;
-	*)
-		kame_path="$use_kame"
-		;;
-esac
-
-case "$use_kame" in
-	no)
-		AC_MSG_RESULT(no)
-		;;
-	*)
-		if test -f $kame_path/lib/libinet6.a; then
-			AC_MSG_RESULT($kame_path/lib/libinet6.a)
-			LIBS="-L$kame_path/lib -linet6 $LIBS"
-		else
-			AC_MSG_ERROR([$kame_path/lib/libinet6.a not found.
-
-Please choose the proper path with the following command:
-
-    configure --with-kame=PATH
-])
-		fi
-		;;
-esac
-
-#
 # Whether netinet6/in6.h is needed has to be defined in isc/platform.h.
 # Including it on Kame-using platforms is very bad, though, because
 # Kame uses #error against direct inclusion.   So include it on only
